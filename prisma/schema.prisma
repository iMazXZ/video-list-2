datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model Video {
  id         String         @id @default(cuid())
  videoId    String         @unique // ID from external API
  name       String
  poster     String
  preview    String
  assetUrl   String
  createdAt  DateTime
  duration   Int
  resolution String
  play       Int
  categories VideoCategory[]
}

model Category {
  id            Int             @id @default(autoincrement())
  name          String
  VideoCategory VideoCategory[]
}

model VideoCategory {
  id         Int      @id @default(autoincrement())
  videoId    String
  video      Video    @relation(fields: [videoId], references: [id], onDelete: Cascade)
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([videoId, categoryId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
